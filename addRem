#!/bin/bash


read -p "Enter event to be reminded of: " eventName
read -p "Enter a title for the reminder: " title
read -p "Enter a message for the reminder: " message
title=${title[@]}
message=${message[@]}
read -p "Is this over an online meeting platform such as Zoom? (Y/N): " confirm
if echo "$confirm" | grep -iq "^y"; then
  read -p "Please provide the online meeting link: " meetingLink
fi

read -p $'Please provide the days you want to be reminded separated by spaces \n(1=Mon, 2=Tue, 3=Wed, 4=Thur, 5=Fri, 6=Sat, 7=Sun)\n: ' days

read -p "Please provide the hour (24-hour time) then minute separated by spaces (e.g. 23 04 or 23:04): " times

read -p $'Please specify where you want the reminder shell scripts to be stored \n(by default stored in same directory as addRem script, remember to use $remHome to reference $HOME)\n: ' remindersDirectory 

# by default remindersDirectory is pwd (pwd is where the addRem script gets executed, not where it's stored)
if [ -z "$remindersDirectory" ]
  then
    remindersDirectory=$(pwd)
fi

if [[ "$remindersDirectory" == *"\$remHome"* ]]
  then
    echo "using remHome"
    afterRemHome=$(echo "$remindersDirectory" | cut -f2- -d/)
    remindersDirectory=${remHome}/$afterRemHome
fi

timesArray=($times)
hour=${timesArray[0]}
minute=${timesArray[1]}

# make days comma-separated
days=$(echo ${days// /,})

# Now that we have the necessary data, we can add it as a terminal-notifier script and then add it to crontab

fileName="${remindersDirectory}/${eventName}_reminder".sh

touch "${fileName}"

chmod u+x "${fileName}"

# Now add the terminal-notifier part to the newly created reminder script
echo "'/Applications/terminal-notifier.app/Contents/MacOS/terminal-notifier' -title '$title' -message '$message' -open $meetingLink" > "$fileName"

# Now add the reminder script to the crontab with user-specified times


# crontab order
#min hour * * day 
(crontab -l 2>/dev/null; echo "$minute $hour * * $days \"${fileName}\"") | crontab -
